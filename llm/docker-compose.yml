version: '3.8'

services:
  # LiteLLM Proxy with LLM Guard Integration
  litellm-proxy:
    image: ghcr.io/berriai/litellm:main
    container_name: litellm-proxy
    ports:
      - "8000:8000"      # Main API endpoint
    environment:
      - CONFIG_PATH=/app/litellm_config.yaml
      - LOG_LEVEL=INFO
      - PYTHON_UNBUFFERED=1
      - LITELLM_LOGGING=DEBUG
    volumes:
      - ./litellm_config.yaml:/app/litellm_config.yaml:ro
      - ./litellm_guard_hooks.py:/app/litellm_guard_hooks.py:ro
      - ./logs:/app/logs
      - ./litellm_proxy.db:/app/litellm_proxy.db
    networks:
      - ai4team
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    command: >
      litellm --config /app/litellm_config.yaml
      --port 8000
      --drop_params
      --add_function_calling

  # Redis for caching (used by LiteLLM)
  redis:
    image: redis:7-alpine
    container_name: litellm-redis
    ports:
      - "6379:6379"
    networks:
      - ai4team
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

networks:
  ai4team:
    driver: bridge

volumes:
  redis_data:
  prometheus_data:
  grafana_data:
