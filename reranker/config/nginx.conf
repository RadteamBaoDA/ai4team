events {
    worker_connections 1024;
}

http {
    upstream reranker_backend {
        # Add multiple reranker instances for load balancing
        server reranker:8000 max_fails=3 fail_timeout=30s;
        # server reranker-2:8000 max_fails=3 fail_timeout=30s;
        # server reranker-3:8000 max_fails=3 fail_timeout=30s;
        
        # Load balancing method
        least_conn;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=reranker_limit:10m rate=10r/s;

    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain application/json;

    server {
        listen 80;
        server_name localhost;

        # Rate limiting
        limit_req zone=reranker_limit burst=20 nodelay;

        # Health check endpoint (bypass rate limiting)
        location /health {
            proxy_pass http://reranker_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Health check specific settings
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # Main API endpoints
        location / {
            proxy_pass http://reranker_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeout settings for reranking requests
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 180s;  # Allow time for model inference
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Request size limits
            client_max_body_size 10M;
        }

        # Metrics endpoint (optional authentication)
        location /metrics {
            # auth_basic "Metrics";
            # auth_basic_user_file /etc/nginx/.htpasswd;
            
            proxy_pass http://reranker_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS configuration (uncomment and configure SSL certificates)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #     
    #     # Same location blocks as above
    #     location / {
    #         proxy_pass http://reranker_backend;
    #         # ... same proxy settings
    #     }
    # }
}