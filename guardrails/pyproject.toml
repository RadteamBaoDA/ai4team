[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ollama-guardrails"
version = "1.0.0"
description = "Advanced LLM Guard Proxy for Ollama with comprehensive security scanning"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "AI4Team", email = "contact@ai4team.dev"}
]
maintainers = [
    {name = "AI4Team", email = "contact@ai4team.dev"}
]
keywords = [
    "llm", "ollama", "guardrails", "security", "proxy", 
    "content-filtering", "ai-safety", "llm-guard"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Framework :: FastAPI",
]
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.31.0",
    "pydantic>=2.11.0,<3.0.0",
    "pydantic-settings>=2.5.2",
    "httpx>=0.27.2",
    "llm-guard>=0.3.16",
    "bc-detect-secrets>=1.5.43",
    "faker>=37,<38",
    "fuzzysearch>=0.7,<0.9",
    "json-repair>=0.44.1",
    "nltk>=3.9.1,<4",
    "presidio-analyzer>=2.2.358",
    "presidio-anonymizer>=2.2.358",
    "regex>=2024.11.6",
    "tiktoken>=0.9,<1.0",
    "torch>=2.4.0",
    "transformers>=4.51.3",
    "structlog>=24",
    "pyyaml>=6.0.2",
    "orjson>=3.10.7",
    "cachetools>=5.5.0",
    "redis[async]>=5.1.1",
    "hiredis>=3.0.0",
    "cryptography>=43.0.0,<44.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.23.0", 
    "pytest-cov>=4.0.0",
    "httpx>=0.27.2",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
performance = [
    "uvloop>=0.20.0; sys_platform != 'win32'",
    "redis[hiredis]>=5.1.1",
]

[project.urls]
Homepage = "https://github.com/RadteamBaoDA/ai4team"
Documentation = "https://github.com/RadteamBaoDA/ai4team/tree/main/guardrails/docs"
Repository = "https://github.com/RadteamBaoDA/ai4team.git"
Issues = "https://github.com/RadteamBaoDA/ai4team/issues"
Changelog = "https://github.com/RadteamBaoDA/ai4team/blob/main/guardrails/CHANGES.md"

[project.scripts]
ollama-guardrails = "ollama_guardrails.cli:main"
guardrails-server = "ollama_guardrails.server:run_server"



[tool.setuptools.packages.find]
where = ["src"]
include = ["ollama_guardrails*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["ollama_guardrails"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/ollama_guardrails"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]