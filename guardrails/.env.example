# Ollama Guardrails Environment Configuration
# Copy this file to .env and customize the values

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Application version
VERSION=1.0.0

# =============================================================================
# OLLAMA BACKEND CONFIGURATION
# =============================================================================

# Ollama server URL
OLLAMA_URL=http://ollama:11434
# Alternative for external Ollama: http://192.168.1.100:11434

# Ollama API path
OLLAMA_PATH=/api/generate

# =============================================================================
# PROXY SERVER CONFIGURATION 
# =============================================================================

# Proxy server bind address (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
PROXY_HOST=0.0.0.0

# Proxy server port
PROXY_PORT=8080

# Configuration file path
CONFIG_FILE=/app/config/config.yaml

# =============================================================================
# GUARDRAILS CONFIGURATION
# =============================================================================

# Enable input content scanning
ENABLE_INPUT_GUARD=true

# Enable output content scanning  
ENABLE_OUTPUT_GUARD=true

# Block requests when guardrails encounter errors
BLOCK_ON_GUARD_ERROR=false

# =============================================================================
# IP ACCESS CONTROL
# =============================================================================

# Enable IP-based filtering
ENABLE_IP_FILTER=false

# Allowed IP addresses/ranges (comma-separated)
# Example: "192.168.1.0/24,10.0.0.1,172.16.0.0/12"
IP_WHITELIST=

# Blocked IP addresses/ranges (comma-separated)
# Example: "192.168.1.100,10.0.0.5"
IP_BLACKLIST=

# =============================================================================
# CACHING CONFIGURATION
# =============================================================================

# Enable caching system
CACHE_ENABLED=true

# Cache backend: 'redis', 'memory', or 'auto'
CACHE_BACKEND=redis

# Cache TTL in seconds (3600 = 1 hour)
CACHE_TTL=3600

# Max cache size for in-memory cache
CACHE_MAX_SIZE=1000

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================

# Redis server hostname
REDIS_HOST=redis

# Redis server port
REDIS_PORT=6379

# Redis database number (0-15)
REDIS_DB=0

# Redis password (leave empty if no auth)
REDIS_PASSWORD=

# Maximum Redis connections
REDIS_MAX_CONNECTIONS=50

# Redis socket timeout in seconds
REDIS_TIMEOUT=5

# Redis key prefix
REDIS_KEY_PREFIX=llmguard:

# Redis max memory (for docker-compose-redis.yml)
REDIS_MAX_MEMORY=512mb

# Redis log level
REDIS_LOG_LEVEL=warning

# Redis data directory (for docker-compose-redis.yml)
REDIS_DATA_DIR=./data/redis

# Redis Commander UI settings (dev only)
REDIS_COMMANDER_PORT=8081
REDIS_COMMANDER_USER=admin
REDIS_COMMANDER_PASSWORD=admin

# =============================================================================
# PERFORMANCE & CONCURRENCY
# =============================================================================

# Number of parallel requests per model ('auto' or specific number)
OLLAMA_NUM_PARALLEL=auto

# Maximum queue size when busy
OLLAMA_MAX_QUEUE=512

# Request timeout in seconds
REQUEST_TIMEOUT=300

# Enable queue statistics
ENABLE_QUEUE_STATS=true

# =============================================================================
# RATE LIMITING
# =============================================================================

# Enable rate limiting
RATE_LIMIT_ENABLED=true

# Requests per minute limit
RATE_LIMIT_PER_MINUTE=60

# Requests per hour limit  
RATE_LIMIT_PER_HOUR=1000

# Burst limit
RATE_LIMIT_BURST=10

# =============================================================================
# MODEL CONFIGURATION
# =============================================================================

# Use local models instead of downloading
USE_LOCAL_MODELS=false

# Local models directory
MODELS_PATH=/app/models

# LLM Guard device (cpu, cuda, mps)
LLM_GUARD_DEVICE=cpu

# =============================================================================
# LOGGING
# =============================================================================

# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# =============================================================================
# PERFORMANCE OPTIMIZATION
# =============================================================================

# Python optimization
PYTHONUNBUFFERED=1
PYTHONDONTWRITEBYTECODE=1
PYTHONHASHSEED=random

# Thread limits for various libraries
OMP_NUM_THREADS=4
MKL_NUM_THREADS=4
OPENBLAS_NUM_THREADS=4

# Apple Silicon specific (for macOS)
VECLIB_MAXIMUM_THREADS=8

# PyTorch optimizations
PYTORCH_MPS_HIGH_WATERMARK_RATIO=0.0
PYTORCH_ENABLE_MPS_FALLBACK=1
MPS_ENABLE_FP16=true

# Memory optimization
MALLOC_ARENA_MAX=2
MALLOC_MMAP_THRESHOLD_=131072
MALLOC_TRIM_THRESHOLD_=131072
MALLOC_TOP_PAD_=131072
MALLOC_MMAP_MAX_=65536

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Enable debug mode
DEBUG=false

# Enable development features
DEV_MODE=false

# Uvicorn settings (for direct uvicorn execution)
UVICORN_WORKERS=1
UVICORN_WORKER_CLASS=uvicorn.workers.UvicornWorker
UVICORN_LIMIT_CONCURRENCY=1000
UVICORN_BACKLOG=2048
UVICORN_TIMEOUT_KEEP_ALIVE=5

# =============================================================================
# DOCKER SETTINGS
# =============================================================================

# Docker platform (for Apple Silicon)
DOCKER_DEFAULT_PLATFORM=linux/amd64

# Container resource limits
CONTAINER_CPU_LIMIT=4.0
CONTAINER_MEMORY_LIMIT=4G
CONTAINER_CPU_RESERVATION=1.0
CONTAINER_MEMORY_RESERVATION=1G